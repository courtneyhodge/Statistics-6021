library(tidyverse)
library(tidyverse)
life_data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data2<- select(life_data,Life.expectancy, GDP) |>
na.omit()
ggplot(life_data2, aes(x=GDP, y = Life.expectancy)) +
geom_point()
cor(life_data2$Life.expectancy, life_data2$GDP)
ggplot(life_data2, aes(x=GDP, y = Life.expectancy)) +
geom_point() +
geom_smooth(method = "lm", se = F)
beta_1 <- cor(life_data2$Life.expectancy, life_data2$GDP) * sd(life_data2$Life.expectancy) / sd(life_data2$GDP)
beta_0 <- mean(life_data2$Life.expectancy) - beta_1 * mean(life_data2$GDP)
beta_0
beta_1
model_1 <- lm(Life.expectancy~GDP, data = life_data2)
coef(model_1)
X <- cbind(1, life_data2$GDP)
Y <- as.matrix(life_data2$Life.expectancy)
beta_hat <- solve((t(X) %*% (X)))%*%t(X)%*%Y
beta_hat
library(tidyr)
Startups2 <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend, Profit)
Startups2 <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
Startups <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\Startups.csv")
library(tidyverse)
ggplot(Startups, aes(x=R.D.Spend, y = Profit)) +
geom_point() +
geom_smooth(method = "lm", se = F)
model_1 <- lm(Profit~R.D.Spend, data = Startups)
coef(model_1)
Bootstrap_estimates <- replicate(1000,{
bootstrap_samples <- Startups[sample(1:nrow(Startups), nrow(Startups), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Profit~R.D.Spend, data = bootstrap_samples)
coef(boostrap_models)
})
Bootstrap_estimates
estimates <- data.frame(t(Bootstrap_estimates))
ggplot(Startups, aes(x=R.D.Spend, y = Profit)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = 'red') +
geom_abline(data = estimates, aes(intercept = X.Intercept., slope = R.D.Spend), color = 'magenta')
summarize(estimates, mean_b0 = mean(X.Intercept.), mean_b1 = mean(R.D.Spend))
coef(model_1)
model_2 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend, data = Startups)
coef(model_2)
X <- cbind(1, Startups$R.D.Spend, Startups$Administration, Startups$Marketing.Spend)
XtX <- t(X) %*%X
inverse_XtX <- solve(XtX)
Xty <- t(X)%*%Startups$Profit
beta <- inverse_XtX%*%Xty
library(tidyr)
Startups2 <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)]
Startups2 <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
long <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
long <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
ggplot(long, aes(x = value, y = Profit, color = predictor)) + geom_point() +
facet_wrap(~predictor, "free_x")
long <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
ggplot(long, aes(x = value, y = Profit, color = predictor)) + geom_point() +
facet_wrap(~predictor, nrom = "free_x")
long <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
ggplot(long, aes(x = value, y = Profit, color = predictor)) + geom_point() +
facet_wrap(~predictor, scales = "free_x")
model1 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend,
data = Startups)
model1 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend,
data = Startups)
coef(model1)
Startups_pred <- mutate(Startups, predictions = fitted(model1),
resid = residuals(model1))
View(Startups_pred)
Startups_pred <- mutate(Startups, predictions = fitted(model1),
resid = residuals(model1))
ggplot(Startups_pred, aes(x = predictions, y = resid)) +
geom_point() + geom_hline(yintercept = 0, color = "orange")
ggplot(Startups_pred, aes(x = resid)) +
stat_qq() +
stat_qq_line()
ggplot(Startups_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line()
ggplot(Startups_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line( color = "yellow")
file.choose()
library(tidyverse)
data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
library(tidyverse)
data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data3<-select(life_data,Life.expectancy, Adult.Mortality,
infant.deaths,HIV.AIDS,BMI, GDP,Schooling)%>%
na.omit()
library(tidyverse)
life_data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data3<-select(life_data,Life.expectancy, Adult.Mortality,
infant.deaths,HIV.AIDS,BMI, GDP,Schooling)%>%
na.omit()
library(tidyverse)
life_data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data2<- select(life_data,Life.expectancy, GDP) |>
na.omit()
ggplot(life_data2, aes(x=GDP, y = Life.expectancy)) +
geom_point()
cor(life_data2$Life.expectancy, life_data2$GDP)
beta_1 <- cor(life_data2$Life.expectancy, life_data2$GDP) * sd(life_data2$Life.expectancy) / sd(life_data2$GDP)
beta_0 <- mean(life_data2$Life.expectancy) - beta_1 * mean(life_data2$GDP)
beta_0
beta_1
model_1 <- lm(Life.expectancy~GDP, data = life_data2)
coef(model_1)
X <- cbind(1, life_data2$GDP)
Y <- as.matrix(life_data2$Life.expectancy)
beta_hat <- solve((t(X) %*% (X)))%*%t(X)%*%Y
beta_hat
X <- cbind(1, life_data2$Adult.Mortality + infant.deaths + HIV.AIDS + BMI + GDP + Schooling)
X <- cbind(1, life_data3$Adult.Mortality + infant.deaths + HIV.AIDS + BMI + GDP + Schooling)
X <- cbind(1, life_data3$Adult.Mortality + life_data3$infant.deaths + life_data3$HIV.AIDS + life_data3$BMI + life_data3$GDP + life_data3$Schooling)
View(X)
life_data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data3<-select(life_data,Life.expectancy, Adult.Mortality,
infant.deaths,HIV.AIDS,BMI, GDP,Schooling)%>%
na.omit()
X <- cbind(1, life_data3$Adult.Mortality + life_data3$infant.deaths + life_data3$HIV.AIDS + life_data3$BMI + life_data3$GDP + life_data3$Schooling)
View(X)
X <- cbind(1, life_data3$Adult.Mortality, life_data3$infant.deaths, life_data3$HIV.AIDS, life_data3$BMI, life_data3$GDP,life_data3$Schooling)
View(X)
Y <- as.matrix(life_data3$Life.expectancy)
beta_hat <- solve((t(X) %*% (X)))%*%t(X)%*%Y
beta_hat
model <- lm(life.Expectancy~Adult.Mortality +  infant.deaths + HIV.AIDS + BMI + GDP + Schooling,
data = life_data3)
model <- lm(Life.Expectancy~Adult.Mortality +  infant.deaths + HIV.AIDS + BMI + GDP + Schooling,
data = life_data3)
model <- lm(Life.Expectancy~Adult.Mortality +  infant.deaths + HIV.AIDS + BMI + GDP + Schooling,
data = life_data3)
model <- lm(Life.expectancy~Adult.Mortality +  infant.deaths + HIV.AIDS + BMI + GDP + Schooling,
data = life_data3)
coef(model)
Bootstrap_estimates <- replicate(10000,{
bootstrap_samples <- life_data3[sample(1:nrow(life_data3), nrow(life_data3), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Life.expectancy~Adult.Mortality +  infant.deaths + HIV.AIDS + BMI + GDP + Schooling, data = life_data3)
coef(boostrap_models)
})
Bootstrap_estimates
Bootstrap_estimates <- replicate(10000,{
bootstrap_samples <- life_data3[sample(1:nrow(life_data3), nrow(life_data3), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Life.expectancy~Adult.Mortality +  infant.deaths + HIV.AIDS + BMI + GDP + Schooling, data = life_data3)
coef(boostrap_models)
})
Bootstrap_estimates <- replicate(1000,{
bootstrap_samples <- Startups[sample(1:nrow(Startups), nrow(Startups), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Profit~R.D.Spend, data = bootstrap_samples)
coef(boostrap_models)
})
View(Bootstrap_estimates)
estimates <- data.frame(t(Bootstrap_estimates))
#summarize(estimates, mean_b0 = mean(X.Intercept.), mean_b1 = mean(R.D.Spend))
library(tidyverse)
life_data <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\expectancy.csv")
life_data2<- select(life_data,Life.expectancy, GDP) |>
na.omit()
ggplot(life_data2, aes(x=GDP, y = Life.expectancy)) +
geom_point()
cor(life_data2$Life.expectancy, life_data2$GDP)
beta_1 <- cor(life_data2$Life.expectancy, life_data2$GDP) * sd(life_data2$Life.expectancy) / sd(life_data2$GDP)
beta_0 <- mean(life_data2$Life.expectancy) - beta_1 * mean(life_data2$GDP)
beta_0
beta_1
model_1 <- lm(Life.expectancy~GDP, data = life_data2)
coef(model_1)
X <- cbind(1, life_data2$GDP)
Y <- as.matrix(life_data2$Life.expectancy)
beta_hat <- solve((t(X) %*% (X)))%*%t(X)%*%Y
beta_hat
estimates <- data.frame(t(Bootstrap_estimates))
estimates
file.choose()
planets <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\PlanetsData.csv")
ggplot(planets, aes(x = distance, y = revolution)) +
geom_point()
Bootstrap_estimates <- replicate(1000,{
bootstrap_samples <- Startups[sample(1:nrow(Startups), nrow(Startups), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Profit~R.D.Spend, data = bootstrap_samples)
coef(boostrap_models)
})
ggplot(planets, aes(x = distance, y = revolution)) +
geom_point() + geom_smooth(method = "lm", se = F)
model2 <- lm(revolution~distance, data = planets)
coef(model2)
planet_pred <- mutatue(planets, pred=fitted(model2), resid=residuals(model2))
planet_pred <- mutate(planets, pred=fitted(model2), resid=residuals(model2))
#residual plot
ggplot(planet_pred, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(intercept = 0, color = "darkgoldenrod1")
#residual plot
ggplot(planet_pred, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "darkgoldenrod1")
ggplot(planets, aes(x = distance, y = revolution)) +
geom_point() + geom_smooth(method = "lm", se = F, color = "cornflowerblue")
ggplot(planets, aes(x = distance, y = revolution)) +
geom_point() + geom_smooth(method = "lm", se = F, color = "cyan")
ggplot(planet_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line()
planets2 <- mutate(planet, log_dist = log(distance), log_rev=log(revolution))
planets2 <- mutate(planets, log_dist = log(distance), log_rev=log(revolution))
ggplot(planets2, aes(x=log_dist, y=log_rev)) +
geom_point()
model3 <- lm(log_rev~log_dist, data=planets2)
coef(model3)
planet_pred2 <- mutate(planets2, pred=fitted(model3), resid=residuals(model3))
planet_pred2 <- mutate(planets2, pred=fitted(model3), resid=residuals(model3))
ggplot(planet_pred2, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(yintercept = 0, color = 'brown1')
file.choose()
file.choose()
library(cars)
library(car)
vif(model10)
Classdata <- read.csv("C:\\Users\\hodge\\Downloads\\ClassData.csv")
library(tidyverse)
OurData5 <-Classdata |> mutate(sleep = as.numeric(Sleep_Hrs))
#defaults to 95% CI
t.test(OurData5$sleep)
mean_calc <- function(x){
return(mean(x, na.rm = T))
}
#replicate is done 10,000 times
bootstrap_means <- replicate(10000, {
bootstraped_data <- sample(OurData5$sleep, replace = T)
mean_calc(bootstraped_data)
})
bootstrap_df <- data.frame(bootstrap_means)
#normal dist of boostrap df
ggplot(bootstrap_df, aes(x = bootstrap_means)) +
geom_density()
quantile(bootstrap_means, c(0.025, 0.975))
#95% confidence interval is (6.969,7.298) <- note that this will change with each run
prop.test(40, 100, p = 0.85, alternative = "l")
#our p value is very close to zero (2.2e-16). Since our p-value < 0.01 = alpha, you will reject the null hypothesis!
#note, whenever your p-val < H0, you say that it is a statistically significant result
#default is 2 sided
t.test(OurData5$sleep, mu = 6, alternative = "g")
#list the (successes, the sample size)
#Slide pack 2, pg 8
prop.test(c(7, 15), c(15, 19))
#we are 95% confident that the proportion of customers who would select A over B is (-0.694, 0.04)
# we can therefore not make a conclusion about this
nba_data <- read.csv("C:\\Users\\hodge\\Downloads\\nba.csv")
home_count <- count(nba_data, home_away)
nba <- read.csv("C:\\Users\\hodge\\Downloads\\nba.csv")
table(nba$W.L, nba$home_away)
#first entry are successes, second entry is sample sizes
prop.test(c(518, 712),c(1230, 1230))
#first entry are successes, second entry is sample sizes
prop.test(c(712, 518),c(1230, 1230))
ggplot(nba, aes(x = home_away, fill = W.L)) +
geom_bar(position = "fill")
#here, we are putting the numerical variable first, followed by the categorical variable second
t.test(PTS~home_away, data = nba)
ggplot(nba, aes(x = home_away, y = PTS)) +
geom_boxplot()
ggplot(nba, aes(x = home_away, y = PTS, fill = home_away)) +
geom_boxplot(outlier.color = "orange") + geom_jitter()
Ourdata <- read.csv("C:\\Users\\hodge\\Downloads\\ClassData.csv")
Ourdata2 <- mutate(Ourdata, Age_Diff = as.numeric(gsub("years", "",Age_Diff_Parents), Age_Diff = gsub("year", "",Age_Diff_Parents)))
Ourdata2[3,17] <- 1
t.test(Ourdata2$Age_Diff)
CT <- read.csv("C:\\Users\\hodge\\Desktop\\UVA_Coding_Folder\\Statistics-6021\\Clinical_trial.csv")
ggplot(CT, aes(x = Drug, y = Pain_Rating, fill = Drug)) +
geom_violin() + geom_jitter()
anova <- aov(Pain_Rating~Drug, data = CT)
anova
#reference the code above
anova
summary(anova)
TukeyHSD(anova, conf.level = 0.95)
plot(TukeyHSD(anova, conf.level = 0.95))
Starups <- read.csv("C:\\Users\\hodge\\Downloads\\Startups.csv")
library(ggplot2)
Startups <- read.csv("C:\\Users\\hodge\\Desktop\\UVA_Coding_Folder\\Statistics-6021\\Startups.csv")
ggplot(Startups, aes(x = R.D.Spend, y = Profit)) +
geom_point() + geom_smooth(method = "lm", se = F)
cor(Startups$Profit, Startups$R.D.Spend)
print(sd(Startups$Profit))
print(sd(Startups$R.D.Spend))
cor(Startups$Profit, Startups$R.D.Spend) * sd(Startups$Profit) / sd(Startups$R.D.Spend)
mean(Startups$Profit) - 0.8542914 * mean(Startups$R.D.Spend)
mod <- lm(Profit~R.D.Spend, data = Startups)
coef(mod)
ggplot(Startups, aes(x=R.D.Spend, y = Profit)) +
geom_point() +
geom_smooth(method = "lm", se = F)
model_1 <- lm(Profit~R.D.Spend, data = Startups)
coef(model_1)
Bootstrap_estimates <- replicate(1000,{
bootstrap_samples <- Startups[sample(1:nrow(Startups), nrow(Startups), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Profit~R.D.Spend, data = bootstrap_samples)
coef(boostrap_models)
})
estimates <- data.frame(t(Bootstrap_estimates))
ggplot(Startups, aes(x=R.D.Spend, y = Profit)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = 'red') +
geom_abline(data = estimates, aes(intercept = X.Intercept., slope = R.D.Spend), color = 'magenta')
summarize(estimates, mean_b0 = mean(X.Intercept.), mean_b1 = mean(R.D.Spend))
coef(model_1)
model_2 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend, data = Startups)
coef(model_2)
X <- cbind(1, Startups$R.D.Spend, Startups$Administration, Startups$Marketing.Spend)
XtX <- t(X) %*%X
inverse_XtX <- solve(XtX)
Xty <- t(X)%*%Startups$Profit
beta <- inverse_XtX%*%Xty
library(tidyr)
Startups2 <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
long <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
ggplot(long, aes(x = value, y = Profit, color = predictor)) + geom_point() +
facet_wrap(~predictor, scales = "free_x")
model1 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend,
data = Startups)
coef(model1)
Startups_pred <- mutate(Startups, predictions = fitted(model1),
resid = residuals(model1))
ggplot(Startups_pred, aes(x = predictions, y = resid)) +
geom_point() + geom_hline(yintercept = 0, color = "orange")
ggplot(Startups_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line( color = "yellow")
planets <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\PlanetsData.csv")
ggplot(planets, aes(x = distance, y = revolution)) +
geom_point() + geom_smooth(method = "lm", se = F, color = "cyan")
model2 <- lm(revolution~distance, data = planets)
coef(model2)
planet_pred <- mutate(planets, pred=fitted(model2), resid=residuals(model2))
#residual plot
ggplot(planet_pred, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "darkgoldenrod1")
ggplot(planet_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line()
planets2 <- mutate(planets, log_dist = log(distance), log_rev=log(revolution))
ggplot(planets2, aes(x=log_dist, y=log_rev)) +
geom_point()
model3 <- lm(log_rev~log_dist, data=planets2)
coef(model3)
planet_pred2 <- mutate(planets2, pred=fitted(model3), resid=residuals(model3))
ggplot(planet_pred2, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(yintercept = 0, color = 'brown1')
```
Classdata <- read.csv("C:\\Users\\hodge\\Downloads\\ClassData.csv")
library(tidyverse)
OurData5 <-Classdata |> mutate(sleep = as.numeric(Sleep_Hrs))
#defaults to 95% CI
t.test(OurData5$sleep)
mean_calc <- function(x){
return(mean(x, na.rm = T))
}
#replicate is done 10,000 times
bootstrap_means <- replicate(10000, {
bootstraped_data <- sample(OurData5$sleep, replace = T)
mean_calc(bootstraped_data)
})
bootstrap_df <- data.frame(bootstrap_means)
#normal dist of boostrap df
ggplot(bootstrap_df, aes(x = bootstrap_means)) +
geom_density()
quantile(bootstrap_means, c(0.025, 0.975))
#95% confidence interval is (6.969,7.298) <- note that this will change with each run
prop.test(40, 100, p = 0.85, alternative = "l")
#our p value is very close to zero (2.2e-16). Since our p-value < 0.01 = alpha, you will reject the null hypothesis!
#note, whenever your p-val < H0, you say that it is a statistically significant result
#default is 2 sided
t.test(OurData5$sleep, mu = 6, alternative = "g")
#list the (successes, the sample size)
#Slide pack 2, pg 8
prop.test(c(7, 15), c(15, 19))
#we are 95% confident that the proportion of customers who would select A over B is (-0.694, 0.04)
# we can therefore not make a conclusion about this
nba_data <- read.csv("C:\\Users\\hodge\\Downloads\\nba.csv")
home_count <- count(nba_data, home_away)
nba <- read.csv("C:\\Users\\hodge\\Downloads\\nba.csv")
table(nba$W.L, nba$home_away)
#first entry are successes, second entry is sample sizes
prop.test(c(518, 712),c(1230, 1230))
#first entry are successes, second entry is sample sizes
prop.test(c(712, 518),c(1230, 1230))
ggplot(nba, aes(x = home_away, fill = W.L)) +
geom_bar(position = "fill")
#here, we are putting the numerical variable first, followed by the categorical variable second
t.test(PTS~home_away, data = nba)
ggplot(nba, aes(x = home_away, y = PTS)) +
geom_boxplot()
ggplot(nba, aes(x = home_away, y = PTS, fill = home_away)) +
geom_boxplot(outlier.color = "orange") + geom_jitter()
Ourdata <- read.csv("C:\\Users\\hodge\\Downloads\\ClassData.csv")
Ourdata2 <- mutate(Ourdata, Age_Diff = as.numeric(gsub("years", "",Age_Diff_Parents), Age_Diff = gsub("year", "",Age_Diff_Parents)))
Ourdata2[3,17] <- 1
t.test(Ourdata2$Age_Diff)
CT <- read.csv("C:\\Users\\hodge\\Desktop\\UVA_Coding_Folder\\Statistics-6021\\Clinical_trial.csv")
ggplot(CT, aes(x = Drug, y = Pain_Rating, fill = Drug)) +
geom_violin() + geom_jitter()
anova <- aov(Pain_Rating~Drug, data = CT)
anova
#reference the code above
anova
summary(anova)
TukeyHSD(anova, conf.level = 0.95)
plot(TukeyHSD(anova, conf.level = 0.95))
Starups <- read.csv("C:\\Users\\hodge\\Downloads\\Startups.csv")
library(ggplot2)
Startups <- read.csv("C:\\Users\\hodge\\Desktop\\UVA_Coding_Folder\\Statistics-6021\\Startups.csv")
ggplot(Startups, aes(x = R.D.Spend, y = Profit)) +
geom_point() + geom_smooth(method = "lm", se = F)
cor(Startups$Profit, Startups$R.D.Spend)
print(sd(Startups$Profit))
print(sd(Startups$R.D.Spend))
cor(Startups$Profit, Startups$R.D.Spend) * sd(Startups$Profit) / sd(Startups$R.D.Spend)
mean(Startups$Profit) - 0.8542914 * mean(Startups$R.D.Spend)
mod <- lm(Profit~R.D.Spend, data = Startups)
coef(mod)
ggplot(Startups, aes(x=R.D.Spend, y = Profit)) +
geom_point() +
geom_smooth(method = "lm", se = F)
model_1 <- lm(Profit~R.D.Spend, data = Startups)
coef(model_1)
Bootstrap_estimates <- replicate(1000,{
bootstrap_samples <- Startups[sample(1:nrow(Startups), nrow(Startups), replace = T),]
#for each of the models, apply the linear models
boostrap_models <-lm(Profit~R.D.Spend, data = bootstrap_samples)
coef(boostrap_models)
})
estimates <- data.frame(t(Bootstrap_estimates))
ggplot(Startups, aes(x=R.D.Spend, y = Profit)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = 'red') +
geom_abline(data = estimates, aes(intercept = X.Intercept., slope = R.D.Spend), color = 'magenta')
summarize(estimates, mean_b0 = mean(X.Intercept.), mean_b1 = mean(R.D.Spend))
coef(model_1)
model_2 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend, data = Startups)
coef(model_2)
X <- cbind(1, Startups$R.D.Spend, Startups$Administration, Startups$Marketing.Spend)
XtX <- t(X) %*%X
inverse_XtX <- solve(XtX)
Xty <- t(X)%*%Startups$Profit
beta <- inverse_XtX%*%Xty
library(tidyr)
Startups2 <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
long <- gather(Startups, key = "predictor", value = "value",
R.D.Spend, Administration, Marketing.Spend)
ggplot(long, aes(x = value, y = Profit, color = predictor)) + geom_point() +
facet_wrap(~predictor, scales = "free_x")
model1 <- lm(Profit~R.D.Spend + Administration + Marketing.Spend,
data = Startups)
coef(model1)
Startups_pred <- mutate(Startups, predictions = fitted(model1),
resid = residuals(model1))
ggplot(Startups_pred, aes(x = predictions, y = resid)) +
geom_point() + geom_hline(yintercept = 0, color = "orange")
ggplot(Startups_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line( color = "yellow")
planets <- read.csv("C:\\Users\\hodge\\OneDrive - Baylor University\\Desktop\\UVA Coding Folder\\STAT 6021\\PlanetsData.csv")
ggplot(planets, aes(x = distance, y = revolution)) +
geom_point() + geom_smooth(method = "lm", se = F, color = "cyan")
model2 <- lm(revolution~distance, data = planets)
coef(model2)
planet_pred <- mutate(planets, pred=fitted(model2), resid=residuals(model2))
#residual plot
ggplot(planet_pred, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "darkgoldenrod1")
ggplot(planet_pred, aes(sample = resid)) +
stat_qq() +
stat_qq_line()
planets2 <- mutate(planets, log_dist = log(distance), log_rev=log(revolution))
ggplot(planets2, aes(x=log_dist, y=log_rev)) +
geom_point()
model3 <- lm(log_rev~log_dist, data=planets2)
coef(model3)
planet_pred2 <- mutate(planets2, pred=fitted(model3), resid=residuals(model3))
ggplot(planet_pred2, aes(x=pred, y=resid)) +
geom_point() +
geom_hline(yintercept = 0, color = 'brown1')
```
file.choose()
file.choose()
setwd("C:/Users/hodge/Desktop/UVA_Coding_Folder/Statistics-6021")
